{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","totalFn","className","s","statUl","statLi","defaultProps","FeedbackOptions","options","onLeaveFeedback","key","Object","keys","buttons","map","e","type","button","onClick","charAt","toUpperCase","slice","Section","title","children","App","useState","setgood","setneutral","setbad","prevState","Math","round","ReactDOM","render","document","querySelector","module","exports"],"mappings":"6LAYeA,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,4BAAIA,O,gBCDDC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAUL,EAAOC,EAAUC,EACjC,OACE,8BACe,IAAZG,EACC,qBAAIC,UAAWC,IAAEC,OAAjB,UACE,qBAAIF,UAAWC,IAAEE,OAAjB,mBAAgCT,KAChC,qBAAIM,UAAWC,IAAEE,OAAjB,sBAAmCR,KACnC,qBAAIK,UAAWC,IAAEE,OAAjB,kBAA+BP,KAC/B,qBAAII,UAAWC,IAAEE,OAAjB,oBAAiCN,EAAME,MACvC,qBAAIC,UAAWC,IAAEE,OAAjB,gCACsBL,EAAmBC,GADzC,UAKF,cAAC,EAAD,CAAcP,QAAQ,yBAK9BC,EAAWW,aAAe,CACxBV,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,Q,gBCnBEY,EAlBO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC7BC,EAAMC,OAAOC,KAAKJ,GAExB,OACE,qBAAKN,UAAWC,IAAEU,QAAlB,SACAH,EAAII,KAAI,SAAAC,GAAC,OACR,wBAEDC,KAAK,SACLd,UAAWC,IAAEc,OACbC,QAAS,kBAAMT,EAAgBM,IAJ9B,SAMAA,EAAEI,OAAO,GAAGC,cAAgBL,EAAEM,MAAM,IALhCN,SCKOO,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCDW,SAASC,IACvB,MAAwBC,mBAAS,GAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB+B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO5B,EAAP,KAAY+B,EAAZ,KAkBA,OACE,sBAAK3B,UAAWuB,EAAhB,UACD,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACDf,QAAS,CAAEZ,OAAMC,UAASC,OAC1BW,gBAboB,SAAAM,GACV,SAANA,EACLY,GAAQ,SAAAG,GAAS,OAAIA,EAAY,KACf,QAANf,EACZc,GAAO,SAAAC,GAAS,OAAIA,EAAY,KACd,YAANf,GAAiBa,GAAW,SAAAE,GAAS,OAAIA,EAAY,UAWjE,cAAC,EAAD,CAASP,MAAM,aAAf,SACE,cAAC,EAAD,CACD3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MA7ByB,SAAAgB,GACzB,OAAOA,GA6BPf,mBA1BsC,SAAAe,GACtC,OAAOgB,KAAKC,MAAc,IAAPpC,EAAcmB,WCZpCkB,IAASC,OAAO,cAACT,EAAD,IAASU,SAASC,cAAc,W,kBCHhDC,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,kBCA/DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,mC","file":"static/js/main.4c7a0689.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import Notification from '../Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const totalFn = good + neutral + bad;\r\n  return (\r\n    <div>\r\n      {totalFn !== 0 ? (\r\n        <ul className={s.statUl}>\r\n          <li className={s.statLi}>Good: {good}</li>\r\n          <li className={s.statLi}>Neutral: {neutral}</li>\r\n          <li className={s.statLi}>Bad: {bad}</li>\r\n          <li className={s.statLi}>Total: {total(totalFn)}</li>\r\n          <li className={s.statLi}>\r\n            Positive feetback: {positivePercentage(totalFn)}%\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;","import s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\tconst key = Object.keys(options);\r\n  \r\n\treturn (\r\n\t  <div className={s.buttons}>\r\n\t\t{key.map(e => (\r\n\t\t  <button\r\n\t\t\tkey={e}\r\n\t\t\ttype=\"button\"\r\n\t\t\tclassName={s.button}\r\n\t\t\tonClick={() => onLeaveFeedback(e)}\r\n\t\t  >\r\n\t\t\t{e.charAt(0).toUpperCase() + e.slice(1)}\r\n\t\t  </button>\r\n\t\t))}\r\n\t  </div>\r\n\t);\r\n  };\r\n  export default FeedbackOptions;\r\n  \r\n  FeedbackOptions.propTypes = {\r\n\tonLeaveFeedback: PropTypes.func,\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React, { useState } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\n\n\nexport default function App() {\n\tconst [good, setgood] = useState(0);\n\tconst [neutral, setneutral] = useState(0);\n\tconst [bad, setbad] = useState(0);\n  \n\tconst countTotalFeedback = e => {\n\t  return e;\n\t};\n  \n\tconst countPositiveFeedbackPercentage = e => {\n\t  return Math.round((good * 100) / e);\n\t};\n  \n\tconst leaveFeedback = e => {\n\t  if (e === 'good') {\n\t\tsetgood(prevState => prevState + 1);\n\t  } else if (e === 'bad') {\n\t\tsetbad(prevState => prevState + 1);\n\t  } else if (e === 'neutral') setneutral(prevState => prevState + 1);\n\t};\n  \n\treturn (\n\t  <div className={App}>\n\t\t<Section title=\"Please leave feedback\">\n\t\t  <FeedbackOptions\n\t\t\toptions={{ good, neutral, bad }}\n\t\t\tonLeaveFeedback={leaveFeedback}\n\t\t  />\n\t\t</Section>\n\t\t<Section title=\"Statistics\">\n\t\t  <Statistics\n\t\t\tgood={good}\n\t\t\tneutral={neutral}\n\t\t\tbad={bad}\n\t\t\ttotal={countTotalFeedback}\n\t\t\tpositivePercentage={countPositiveFeedbackPercentage}\n\t\t  />\n\t\t</Section>\n\t  </div>\n\t);\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.js';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statLi\":\"Statistics_statLi__zviw8\",\"statUl\":\"Statistics_statUl__3fXZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2DjcL\",\"button\":\"FeedbackOptions_button__3qAIy\"};"],"sourceRoot":""}